<% environment.context_class.instance_eval { include ApplicationHelper } %>

window.ComposeController = ($scope) ->
  # character limits
  $scope.max_question = <%= MAX_QUESTION %>
  $scope.max_answer = <%= MAX_ANSWER %>
  $scope.max_message = <%= MAX_MESSAGE %>

  $scope.submitted = false

  $scope.remaining = (text, max_count) ->
    if !text?
      return max_count
    return max_count - text.length

  $scope.bad_count = (text, max_count) ->
    if !text?
      return false
    return text.length > max_count

  $scope.error_message = () ->
    if !$scope.message? or $scope.message == ''
      return 'Enter a secret message.'
    if $scope.message.length > $scope.max_message
      return 'The secret message is too long.'

    if !$scope.question? or $scope.question == ''
      return 'Enter a security question.'
    if $scope.question.length > $scope.max_question
      return 'The security question is too long.'

    if !$scope.answer? or $scope.answer == ''
      return 'Enter an answer to the security question.'
    if $scope.answer.length > $scope.max_answer
      return 'The answer is too long.'

    return null

  $scope.submit = (event) ->
    if $scope.error_message() == null and !$scope.submitted
      $scope.submitted = true
      $(event.target).parent().find('.submit').prop('disabled', true)
      $.post("/new", {
        question: $scope.question,
        answer: $scope.answer,
        message: $scope.message,
      }).done (data) ->
        if data.status == "ok"
          window.location = "/" + data.post.id

  $(".compose-form").keydown (e) ->
    if e.keyCode == 13
      e.preventDefault()

ComposeController.$inject = ['$scope']

window.PostsController = ($scope) ->
  $scope.loading = false
  $scope.no_more = !more
  if posts.length > 0
    $scope.last_timestamp = posts[posts.length - 1].date
  else
    $scope.last_timestamp = null

  $scope.posts = posts
  $scope.columns = [[], [], []]
  for i in [0...$scope.posts.length]
    $scope.columns[i % $scope.columns.length].push($scope.posts[i])

  $(window).scroll ->
    if $(window).scrollTop() + $(window).height() >= $(document).height() - 200
      if !$scope.loading and !$scope.no_more
        $scope.$apply () ->
          $scope.loading = true
          $.ajax({url: "/batch", data: { date: $scope.last_timestamp } }).success((data) ->
            $scope.$apply () ->
              if data.status == "ok"
                $scope.no_more = !data.more
                for post in data.posts
                  $scope.columns[($scope.posts.length) % $scope.columns.length].push(post)
                  $scope.posts.push(post)
                if posts.length > 0
                  $scope.last_timestamp = posts[posts.length - 1].date
          ).complete -> ($scope.$apply (() -> $scope.loading = false))

  clicking_post = null

  $scope.expand = (post, event) ->
    if !post.expanded
      setTimeout (() -> $(event.target).closest('.card').find('.answer-form .answer').focus().select()), 0
    post.expanded = true
    clicking_post = post.id
    setTimeout (() -> clicking_post = null), 0

  $scope.contract = (post, event) ->
    post.expanded = false
    clicking_post = post.id
    setTimeout (() -> clicking_post = null), 0

  $(document).click () ->
    $scope.$apply () ->
      for post in $scope.posts
        if clicking_post != post.id
          if post.expanded
            post.expanded = false
      clicking_post = null

  $scope.submit = (event, post) ->
    answer = $(event.target).parent().find('.answer').val()
    $.post("/check", {
      id: post.id,
      answer: answer,
    }).done (data) ->
      $scope.$apply () ->
        if data.status == "ok"      
          post.answered = true
          post.answer = data.answer
          post.message = data.message
        else
          console.log "nope"

PostsController.$inject = ['$scope']